version: "3.1"
services:
    app:
        build:
            context: .
            dockerfile: ./docker-files/Dockerfile
        container_name: api-app
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker-files/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
        depends_on:
            - db
            - redis
            - mongo

    webserver:
        image: nginx:alpine
        container_name: api-webserver
        restart: unless-stopped
        tty: true
        ports:
            - "3000:80"
        volumes:
            - ./:/var/www
            - ./docker-files/nginx/conf.d/:/etc/nginx/conf.d
        networks:
            - app-network
        depends_on:
            - app

    db:
        image: postgres:latest
        container_name: api-postgres
        restart: unless-stopped
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=database
        volumes:
            - ./volumes/dbdata:/var/lib/postgresql/data
        ports:
            - "3001:5432"
        networks:
            - app-network

    redis:
        image: redis:latest
        container_name: api-redis
        restart: unless-stopped
        ports:
            - "3003:6379"
        networks:
            - app-network

    mongo:
        image: mongo
        container_name: api-mongo
        restart: unless-stopped
        environment:
            - MONGO_INITDB_DATABASE=mongo
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=password
        volumes:
            - ./volumes/mongo:/data/db
        ports:
            - "3002:27017"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
    mongo:
        driver: local
